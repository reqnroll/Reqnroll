<Project>
  
  <PropertyGroup>
    <ReqnrollTasksDir Condition=" '$(MSBuildRuntimeType)' == 'Core' And '$(ReqnrollTasksDir)' == ''">netstandard2.0/</ReqnrollTasksDir>
    <ReqnrollTasksDir Condition=" '$(MSBuildRuntimeType)' != 'Core' And '$(ReqnrollTasksDir)' == ''">net462/</ReqnrollTasksDir>
    <ReqnrollGenerationTasksAssemblyFile Condition=" '$(ReqnrollGenerationTasksAssemblyFile)' == '' ">Reqnroll.Tools.MsBuild.Generation.dll</ReqnrollGenerationTasksAssemblyFile>
    <ReqnrollGenerationTasksAssemblyPath Condition=" '$(ReqnrollGenerationTasksAssemblyPath)' == '' ">$(ReqnrollTasksDir)$(ReqnrollGenerationTasksAssemblyFile)</ReqnrollGenerationTasksAssemblyPath>

    <!-- Using `TaskHostFactory` ensures that the task assembly will not be locked by Visual Studio on Windows. See: https://learn.microsoft.com/en-us/visualstudio/msbuild/how-to-configure-targets-and-tasks?view=vs-2022#task-factories -->
    <!-- Note: `TaskHostFactory` is not compatible with some macOS versions. https://github.com/reqnroll/Reqnroll/issues/152 -->
    <ReqnrollGenerationTaskFactory Condition="'$(ReqnrollGenerationTaskFactory)' == '' And $([MSBuild]::IsOsPlatform('Windows'))">TaskHostFactory</ReqnrollGenerationTaskFactory>
    <ReqnrollGenerationTaskFactory Condition="'$(ReqnrollGenerationTaskFactory)' == '' And !($([MSBuild]::IsOsPlatform('Windows')))">AssemblyTaskFactory</ReqnrollGenerationTaskFactory>

  </PropertyGroup>

  <UsingTask TaskName="Reqnroll.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTask" AssemblyFile="$(ReqnrollGenerationTasksAssemblyPath)" TaskFactory="$(ReqnrollGenerationTaskFactory)" />
  <UsingTask TaskName="Reqnroll.Tools.MsBuild.Generation.ReplaceTokenInFileTask" AssemblyFile="$(ReqnrollGenerationTasksAssemblyPath)" TaskFactory="$(ReqnrollGenerationTaskFactory)" />

  <PropertyGroup>
    <_ReqnrollTasksImported>true</_ReqnrollTasksImported>
  </PropertyGroup>
</Project>