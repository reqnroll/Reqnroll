<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <ReqnrollTestTFM Condition="'$(MSBuildRuntimeType)' == 'Core'">$(ReqnrollCoreToolsTfm)</ReqnrollTestTFM>
    <ReqnrollTestTFM Condition="'$(MSBuildRuntimeType)' != 'Core'">$(ReqnrollFullFrameworkToolsTfm)</ReqnrollTestTFM>
    <_RepoRoot>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)../../'))</_RepoRoot>
    <ReqnrollGenerationProjectPath>$(_RepoRoot)Reqnroll.Tools.MsBuild.Generation/</ReqnrollGenerationProjectPath>
    <ReqnrollGenerationTasksPath>$(ReqnrollGenerationProjectPath)bin/$(Configuration)/$(ReqnrollTestTFM)/</ReqnrollGenerationTasksPath>
    <GenerateReqnrollAssemblyHooksFile>true</GenerateReqnrollAssemblyHooksFile>
  </PropertyGroup>

  <Import Project="$(ReqnrollGenerationProjectPath)build/Reqnroll.Tools.MsBuild.Generation.props" />

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <AssemblyName>Reqnroll.Specs</AssemblyName>
    <AssemblyOriginatorKeyFile>$(ReqnrollKeyFile)</AssemblyOriginatorKeyFile>
    <SignAssembly>false</SignAssembly>
    <PublicSign>$(ReqnrollPublicSign)</PublicSign>
    <PackageId>Reqnroll.Specs</PackageId>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>
    <ReqnrollDeleteCodeBehindFilesOnCleanRebuild>true</ReqnrollDeleteCodeBehindFilesOnCleanRebuild>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
    <NoWarn>$(NoWarn);CS2002</NoWarn>

  </PropertyGroup>
  <ItemGroup>
    <Compile Remove=".\TestFiles\**\*" />

    <EmbeddedResource Include=".\Drivers\Templates\**\*" />
    <EmbeddedResource Include=".\TestFiles\**\*" />
    
    <None Include="App.config" />

    <ReqnrollFeatureFiles Remove="TestFiles/**/*.feature" />
  </ItemGroup>
   
  <ItemGroup>
    <ProjectReference Include="..\..\Plugins\Reqnroll.MSTest.ReqnrollPlugin\Reqnroll.MSTest.ReqnrollPlugin.csproj">
      <AdditionalTargets>GenerateAssemblyHookTemplates</AdditionalTargets>
    </ProjectReference>
    <ProjectReference Include="..\TestProjectGenerator\Reqnroll.TestProjectGenerator\Reqnroll.TestProjectGenerator.csproj" />
    <ProjectReference Include="..\..\Reqnroll.Parser\Reqnroll.Parser.csproj" />
    <ProjectReference Include="..\..\Reqnroll.Utils\Reqnroll.Utils.csproj" />
    <ProjectReference Include="..\..\Plugins\Reqnroll.MSTest.Generator.ReqnrollPlugin\Reqnroll.MSTest.Generator.ReqnrollPlugin.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="GitHubActionsTestLogger" Version="2.4.1" Condition="'$(REQNROLL_TEST_PIPELINEMODE)' == 'true'">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="MSBuild.AdditionalTasks" Version="*" />
    <PackageReference Include="FluentAssertions" Version="6.12.0" />
    <PackageReference Include="Moq" Version="4.20.72" />
    <PackageReference Include="MSTest" Version="3.8.2" />
  </ItemGroup>

  <ItemGroup>
    <NuGetPackageVersionTemplate Include="NuGetPackageVersion.cs" />
    <UpToDateCheckInput Include="@(NuGetPackageVersionTemplate)" />
    <UpToDateCheckOutput Include="@(NuGetPackageVersionTemplate -> '$(IntermediateOutputPath)%(Filename).$(PackageVersion)%(Extension)')" />
    <Compile Remove="@(NuGetPackageVersionTemplate)" />
    <None Include="@(NuGetPackageVersionTemplate)" />
  </ItemGroup>

  <Target
    Name="WriteNuGetVersion"
    Inputs="@(NuGetPackageVersionTemplate)"
    Outputs="$(IntermediateOutputPath)%(NuGetPackageVersionTemplate.Filename).$(PackageVersion)%(NuGetPackageVersionTemplate.Extension)"
    AfterTargets="GetBuildVersion"
    BeforeTargets="BeforeCompile"
    Condition="$(DesignTimeBuild) != 'true' OR '$(BuildingProject)' == 'true'">

    <!-- Read the lines from the template. -->
    <ReadLinesFromFile File="%(NuGetPackageVersionTemplate.Identity)">
      <Output TaskParameter="Lines" ItemName="_NuGetPackageVersionTemplateLine" />
    </ReadLinesFromFile>

    <!-- Produce the output file with the namespace token replaced. -->
    <WriteLinesToFile
      File="$(IntermediateOutputPath)%(NuGetPackageVersionTemplate.Filename)$(PackageVersion)%(NuGetPackageVersionTemplate.Extension)"
      Lines="@(_NuGetPackageVersionTemplateLine -> Replace(`NUGET_VERSION`, `$(PackageVersion)`))"
      Overwrite="true"
      Encoding="UTF-8" />

    <ItemGroup>
      <!-- Include the generated hooks in the compilation -->
      <Compile Include="$(IntermediateOutputPath)%(NuGetPackageVersionTemplate.Filename)$(PackageVersion)%(NuGetPackageVersionTemplate.Extension)" />

      <!-- Track the file was created during the build so it will be cleaned automatically. -->
      <FileWrites Include="$(IntermediateOutputPath)%(NuGetPackageVersionTemplate.Filename)$(PackageVersion)%(NuGetPackageVersionTemplate.Extension)" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <ReqnrollGeneratorPlugins Include="$(_RepoRoot)Plugins/Reqnroll.MSTest.Generator.ReqnrollPlugin/bin/$(Configuration)/netstandard2.0/Reqnroll.MSTest.Generator.ReqnrollPlugin.dll" />
    <ReqnrollAssemblyHooksTemplate Include="$(_RepoRoot)Plugins/Reqnroll.MSTest.ReqnrollPlugin/obj/$(Configuration)/netstandard2.0/MSTest.AssemblyHooks.$(PackageVersion).cs" />
  </ItemGroup>

  <Import Project="$(ReqnrollGenerationProjectPath)build/Reqnroll.Tools.MsBuild.Generation.targets" />
  <Import Project="$(_RepoRoot)Plugins/Reqnroll.TestFrameworkAdapter.targets" />

</Project>
