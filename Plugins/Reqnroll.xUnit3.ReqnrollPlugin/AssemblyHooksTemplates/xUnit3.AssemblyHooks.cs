// <auto-generated />
#pragma warning disable

using System.CodeDom.Compiler;
using global::System.Runtime.CompilerServices;
using System.Threading.Tasks;

[assembly: global::Xunit.TestFramework(typeof(Reqnroll.xUnit3.ReqnrollPlugin.XUnit3TestFrameworkWithAssemblyFixture))]
[assembly: global::Xunit.AssemblyFixture(typeof(global::PROJECT_ROOT_NAMESPACE_XUnit3AssemblyFixture))]

[GeneratedCode("Reqnroll", "REQNROLL_VERSION")]
public class PROJECT_ROOT_NAMESPACE_XUnit3AssemblyFixture : global::Xunit.IAsyncLifetime
{
    [MethodImpl(MethodImplOptions.NoInlining)]
    public async ValueTask InitializeAsync()
    {
        var currentAssembly = typeof(PROJECT_ROOT_NAMESPACE_XUnit3AssemblyFixture).Assembly;
        await global::Reqnroll.TestRunnerManager.OnTestRunStartAsync(currentAssembly);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public async ValueTask DisposeAsync()
    {
        var currentAssembly = typeof(PROJECT_ROOT_NAMESPACE_XUnit3AssemblyFixture).Assembly;
        await global::Reqnroll.TestRunnerManager.OnTestRunEndAsync(currentAssembly);
    }
}

[global::Xunit.CollectionDefinition("ReqnrollNonParallelizableFeatures", DisableParallelization = true)]
public class PROJECT_ROOT_NAMESPACE_ReqnrollNonParallelizableFeaturesCollectionDefinition
{
}
#pragma warning restore
