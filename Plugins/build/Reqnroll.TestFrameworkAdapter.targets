<Project>
  <Target
    Name="_WriteAssemblyHooksVersion"
    BeforeTargets="Build"
    Inputs="@(AssemblyHooksTemplate)"
    Outputs="$(IntermediateOutputPath)%(AssemblyHooksTemplate.Filename).$(PackageVersion)%(AssemblyHooksTemplate.Extension)')">

    <!-- Generate the assembly hooks file from templates -->
    <GenerateFileFromTemplate
      TemplateFile="%(AssemblyHooksTemplate.Identity)"
      OutputFile="$(IntermediateOutputPath)%(AssemblyHooksTemplate.Filename).$(PackageVersion)%(AssemblyHooksTemplate.Extension)"
      Tokens="@(_AssemblyHooksToken)"/>

    <ItemGroup>
      <!-- Include the file in the final build package -->
      <None
        Include="$(IntermediateOutputPath)%(AssemblyHooksTemplate.Filename).$(PackageVersion)%(AssemblyHooksTemplate.Extension)"
        Pack="true"
        PackagePath="build/%(AssemblyHooksTemplate.Filename)%(AssemblyHooksTemplate.Extension)"/>

      <!-- Track the file was created during the build so it will be cleaned automatically. -->
      <FileWrites Include="$(IntermediateOutputPath)%(AssemblyHooksTemplate.Filename).$(PackageVersion)%(AssemblyHooksTemplate.Extension)" />
    </ItemGroup>

  </Target>

  <!-- Gets the generator plugin that needs to be included with this package. -->
  <Target Name="_GetGeneratorPlugin" DependsOnTargets="ResolveReferences" Returns="GeneratorPlugin">
    <ItemGroup>
      <GeneratorPlugin
        Include="@(ReferenceCopyLocalPaths)"
        Condition="'%(ReferenceCopyLocalPaths.IsReqnrollGenerator)' == 'true'" />
    </ItemGroup>
  </Target>

  <!-- Collects the generator plugin to be included in the package. -->
  <Target Name="_CollectGeneratorPlugin" DependsOnTargets="_GetGeneratorPlugin" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <GeneratorPluginSymbol Include="@(GeneratorPlugin)" Condition="'%(Extension)' == '.pdb'" />

      <None Include="@(GeneratorPlugin)" Pack="true" PackagePath="build/$(TargetFramework)/" />
      <None Update="@(GeneratorPluginSymbol)" PackFolder="Symbols" />
    </ItemGroup>
  </Target>
  
  <UsingTask
    TaskName="GenerateFileFromTemplate"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <TemplateFile ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
      <Tokens ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text" />
      <Using Namespace="System.Collections.Generic" />

      <Code Source="$(MSBuildThisFileDirectory)Reqnroll.GenerateFileFromTemplateTask.cs" Type="Fragment" Language="cs" />
    </Task>
  </UsingTask>
</Project>
