// <auto-generated />
#pragma warning disable

using System.CodeDom.Compiler;
using System.Diagnostics;
using global::Microsoft.VisualStudio.TestTools.UnitTesting;
using global::Reqnroll;
using global::Reqnroll.MSTest.ReqnrollPlugin;
using global::System.Runtime.CompilerServices;
using System.Threading.Tasks;

[GeneratedCode("Reqnroll", "REQNROLL_VERSION")]
[TestClass]
public class PROJECT_ROOT_NAMESPACE_MSTestAssemblyHooks
{
    [AssemblyInitialize]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static async Task AssemblyInitializeAsync(TestContext testContext)
    {
        var currentAssembly = typeof(PROJECT_ROOT_NAMESPACE_MSTestAssemblyHooks).Assembly;
        var containerBuilder = new MsTestContainerBuilder(testContext);

        try
        {
            await global::Reqnroll.TestRunnerManager.OnTestRunStartAsync(currentAssembly, containerBuilder: containerBuilder);
        }
        catch (System.Exception ex)
        {
            // wrap the exception because MsTest swallows the outer exception
            throw new System.AggregateException(ex);
        }
    }

    [AssemblyCleanup]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static async Task AssemblyCleanupAsync()
    {
        var currentAssembly = typeof(PROJECT_ROOT_NAMESPACE_MSTestAssemblyHooks).Assembly;
        await global::Reqnroll.TestRunnerManager.OnTestRunEndAsync(currentAssembly);
    }
}
#pragma warning restore
